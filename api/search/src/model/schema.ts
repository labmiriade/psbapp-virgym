/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/p/{placeId}': {
    /** Ottieni informazioni su un luogo */
    get: {
      parameters: {
        path: {
          placeId: string;
        };
      };
      responses: {
        /** Informazioni sul luogo */
        200: {
          content: {
            'application/json': components['schemas']['PlaceInfo'];
          };
        };
      };
    };
    parameters: {
      path: {
        placeId: string;
      };
    };
  };
  '/p/{placeId}/slots': {
    /** Ottieni la lista degli slot selezionabili, a partire dalla data indicata nel query parameter `from`, fino alla data specificata nel query parameter (opzionale) `to` */
    get: {
      parameters: {
        path: {
          placeId: string;
        };
        query: {
          from: string;
          to?: string;
        };
      };
      responses: {
        /** Lista delle prenotazioni disponibili */
        200: {
          content: {
            'application/json': components['schemas']['SlotsResponse'];
          };
        };
      };
    };
    parameters: {
      path: {
        placeId: string;
      };
    };
  };
  '/p/{placeId}/slots/{slotId}/bookings': {
    /** Crea una nuova prenotazione per il luogo indicato, nello slot indicato */
    post: {
      parameters: {
        path: {
          placeId: string;
          slotId: string;
        };
      };
      responses: {
        /** Creata prenotazione */
        201: {
          content: {
            'application/json': components['schemas']['BookingResponse'];
          };
        };
      };
      /** La richiesta di prenotazione */
      requestBody: {
        content: {
          'application/json': components['schemas']['BookingRequest'];
        };
      };
    };
    parameters: {
      path: {
        placeId: string;
        slotId: string;
      };
    };
  };
  '/b/{bookingId}': {
    /** Ottieni le informazioni su una specifica prenotazione a partire dal suo ID */
    get: {
      parameters: {
        path: {
          bookingId: string;
        };
      };
      responses: {
        /** Le informazioni sulla prenotazione */
        200: {
          content: {
            'application/json': components['schemas']['BookingInfo'];
          };
        };
      };
    };
    /** Elimina la prenotazione con l'ID indicato */
    delete: {
      parameters: {
        path: {
          bookingId: string;
        };
      };
      responses: {
        /** Annulla la prenotazione */
        204: never;
      };
    };
    parameters: {
      path: {
        bookingId: string;
      };
    };
  };
  '/search/p': {
    /** At least one of the 'q' or the 'near' parameters is required */
    get: {
      parameters: {
        query: {
          /** The text for full text search on all fields */
          q?: string;
          /** Latitude and longitude for the search */
          near?: string;
        };
      };
      responses: {
        /** OK */
        200: {
          content: {
            'application/json': components['schemas']['PlaceList'];
          };
        };
      };
    };
  };
}

export interface components {
  schemas: {
    PlaceList: {
      places?: components['schemas']['PlaceInfo'][];
    };
    PlaceInfo: {
      placeId?: string;
      building?: string;
      city?: string;
      street?: string;
      streetNumber?: string;
      province?: string;
      phone?: string;
      lat?: string;
      lon?: string;
      category?: string;
      name?: string;
      website?: string;
      istatCode?: string;
      representative?: string;
      cpu?: string;
      /** La descrizione testuale degli orari di apertura */
      openingTimeDesc?: string;
      /** Consentire o meno la registrazione tramite SMS */
      allowBookingByPhone?: boolean;
      /** Consentire o meno la ricerca della palestra */
      searchable?: boolean;
      /** Consentire o meno la prenotazione presso questa palestra */
      bookable?: boolean;
    };
    Slot: {
      /** L'id dello specifico slot. È univoco solamente per un determinato Place. */
      slotId: string;
      /** Orario di inizio dello slot in UTC seguendo ISO8601 */
      startDatetime: string;
      /** Numero di minuti di ampiezza dello slot. */
      duration: number;
      /** Numero di posti allocabili in quello slot. */
      allowedPeople?: number;
      /** Numero di posti liberi in questo slot. */
      availablePlaces?: number;
      /** Data e ora a partire dalla quale è possibile prenotare un posto nello slot selezionato. */
      allowBookingFrom?: string;
      /** Data e ora fino alla quale è possibile prenotare un posto nello slot selezionato. */
      allowBookingUntil?: string;
    };
    SlotsResponse: {
      slots?: components['schemas']['Slot'][];
    };
    BookingRequest: ({ [key: string]: any } | { [key: string]: any }) & {
      people: number;
      /** A valid phone number, no spaces, with international prefix. */
      phone?: string;
      /** A valid email to whom the booking will be sent. */
      email?: string;
    };
    BookingResponse: {
      bookedPeople?: number;
    };
    BookingInfo: {
      placeId: string;
      bookingId: string;
      /** Orario di inizio dello slot in UTC seguendo ISO8601 */
      startDatetime?: string;
      /** Ampiezza dello slot in minuti */
      duration?: number;
      /** Numero di persone consentite */
      bookedPeople?: number;
      /** Un codice casuale univoco per identificare l'utente se il booking ID non è leggibile con QR-scanner */
      secretCode?: string;
      /** Whether the booking has been used or not */
      entered?: boolean;
      /** Ancora in fase di valutazione se aggiungere tutto qui o lasciare che sia il frontend a fare due chiamate */
      place?: components['schemas']['PlaceInfo'];
    };
  };
}

export interface operations {}
